{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww7780\viewh7680\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Enter the word into the method.\
Determine how long the word is.\
Set the number of guesses the user has equal to the number of letters in the word\
Break the word into its component letters, and store those letters in array\
THEY ARE STORED IN WORD ARRAY\
word chain is a string of dashes of the same length as the word\
Let the user guess a letter\
store the letter the user guesses in a different array\
check to see if the letter exists in the word array\
if the letter exists in the word, replace the appropriate dash with the letter\
if the letter has been guessed before, ask for a letter again\
if the letter doesn\'92t exist in the word, subtract one from guesses\
return the updated word chain to the user\
when updated word chain includes all letters, print congratulations\
if updated word chain does not include all letters when guesses run out, print taunting message.\
\
Tell the user that their challenge will be to guess the word, and how many guesses they will get.\
\'93The secret word has been entered! It is XX letters long. Your challenge is to guess letters, one at a time, until you have successfully spelled the entire word! You have XX guesses. Which letter would you like to guess first?\'94\
\
see if letter is inside array\
if it is, replace position in another array with that letter\
\
use each with index\
\
Array docs \'97> scroll down\
\
e.g. \
\
def guess_letter(guessed)\
@word_letters.each_with_index do  |item, index|\
	if guessed_letter = letter\
	@secret_word[index] = letter\
	else\
	end\
end\
}