{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
class WordGame\
	attr_reader :guess_count\
	attr_reader :is_over\
\
def initialize\
	@word = \'93\'94\
	@guess_number = 0\
	@is_correct = false\
	@is_over = false\
end\
\
def word_breaker\
	@word = @word.split(//) \
	#WORD IS NOW AN ARRAY\
end\
\
def word_spaces\
	word.length * \'93_ \'93\
end\
\
def total_guesses\
	total_guesses = @word.length\
end\
\
def check_letter(index)\
	puts \'93Take a guess!\'94\
	user_guess = gets.chomp\
	stored_guesses << user_guess\
	@guess_count +=1\
		if word[index] == user_guess\
			@is_correct = true\
		else\
			false\
		end\
	end\
end\
\
=====\
word is passed into method in driver code\
guess should be initialized at 1\
\
method should count the number of letters in the word using .length\
use should see \'93_ \'93 * word.length\
user should see \'93you have #\{word.length\} guesses to figure out the word! This is guess number #\{guess_number\}\'94\
\
\
word <\'97string // array\
guess_number (make sure to remove duplicates) <\'97integer\
stored_guesses <\'97array\
is_over <\'97boolean}